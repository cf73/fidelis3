{"version":3,"file":"Typography-DZld3_jF.js","sources":["../../src/components/ui/Typography.tsx"],"sourcesContent":["/**\r\n * @preserve-visual-language\r\n * DO NOT MODIFY: Styling, layout, or visual presentation\r\n * Only modify: Functionality, data handling, or performance\r\n * \r\n * Visual Language:\r\n * - Colors: Primary blue, accent gold, neutral grays\r\n * - Typography: Inter font, established scale\r\n * - Spacing: 4px base unit system\r\n * - Layout: Responsive grid, consistent padding\r\n */\r\n\r\nimport React from 'react';\r\n\r\nexport interface TypographyProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  as?: React.ElementType;\r\n}\r\n\r\nexport const H1: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'h1' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-4xl lg:text-6xl font-light tracking-wide text-stone-800 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const H2: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'h2' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-3xl lg:text-3xl font-medium tracking-tight text-stone-800 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const H3: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'h3' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-2xl font-light tracking-wide text-stone-800 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const H4: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'h4' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-xl font-light tracking-wide text-stone-800 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const BodyLarge: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'p' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-lg font-light tracking-wide text-stone-700 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const Body: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'p' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-base font-light tracking-wide text-stone-700 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const BodySmall: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'p' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-sm font-light tracking-wide text-stone-600 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const Caption: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'span' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-xs font-light tracking-wide text-stone-500 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const Price: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'span' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-xl font-bold text-stone-900 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n\r\nexport const PriceLarge: React.FC<TypographyProps> = ({ children, className = '', as: Component = 'span' }) => {\r\n  const ComponentType = Component as React.ElementType;\r\n  return (\r\n    <ComponentType className={`text-3xl font-bold text-stone-900 ${className}`}>\r\n      {children}\r\n    </ComponentType>\r\n  );\r\n};\r\n"],"names":["H1","children","className","Component","ComponentType","H2","H3","H4","BodyLarge","Body","BodySmall","Caption","Price","PriceLarge"],"mappings":"wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoBO,MAAMA,EAAgC,CAAC,CAAE,SAAAC,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,QAAW,CACnG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,gEAAgEF,CAAS,GAChG,SAAAD,EACH,CAEJ,EAEaI,EAAgC,CAAC,CAAE,SAAAJ,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,QAAW,CACnG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,kEAAkEF,CAAS,GAClG,SAAAD,EACH,CAEJ,EAEaK,EAAgC,CAAC,CAAE,SAAAL,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,QAAW,CACnG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,oDAAoDF,CAAS,GACpF,SAAAD,EACH,CAEJ,EAEaM,EAAgC,CAAC,CAAE,SAAAN,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,QAAW,CACnG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,mDAAmDF,CAAS,GACnF,SAAAD,EACH,CAEJ,EAEaO,EAAuC,CAAC,CAAE,SAAAP,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,OAAU,CACzG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,mDAAmDF,CAAS,GACnF,SAAAD,EACH,CAEJ,EAEaQ,EAAkC,CAAC,CAAE,SAAAR,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,OAAU,CACpG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,qDAAqDF,CAAS,GACrF,SAAAD,EACH,CAEJ,EAEaS,EAAuC,CAAC,CAAE,SAAAT,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,OAAU,CACzG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,mDAAmDF,CAAS,GACnF,SAAAD,EACH,CAEJ,EAEaU,EAAqC,CAAC,CAAE,SAAAV,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,UAAa,CAC1G,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,mDAAmDF,CAAS,GACnF,SAAAD,EACH,CAEJ,EAEaW,EAAmC,CAAC,CAAE,SAAAX,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,UAAa,CACxG,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,oCAAoCF,CAAS,GACpE,SAAAD,EACH,CAEJ,EAEaY,EAAwC,CAAC,CAAE,SAAAZ,EAAU,UAAAC,EAAY,GAAI,GAAIC,EAAY,UAAa,CAC7G,MAAMC,EAAgBD,EACtB,aACGC,EAAA,CAAc,UAAW,qCAAqCF,CAAS,GACrE,SAAAD,EACH,CAEJ"}