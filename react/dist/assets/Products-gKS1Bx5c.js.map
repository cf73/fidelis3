{"version":3,"file":"Products-gKS1Bx5c.js","sources":["../../src/pages/Products.tsx"],"sourcesContent":["/**\r\n * @preserve-visual-language\r\n * DO NOT MODIFY: Styling, layout, or visual presentation\r\n * Only modify: Functionality, data handling, or performance\r\n * \r\n * Visual Language:\r\n * - Colors: Primary blue, accent gold, neutral grays\r\n * - Typography: Inter font, established scale\r\n * - Spacing: 4px base unit system\r\n * - Layout: Responsive grid, consistent padding\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useSearchParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getProductsWithCategories, getProductCategories, getManufacturers, getImageUrl } from '../lib/supabase';\r\nimport { Product, ProductCategory, Manufacturer } from '../lib/supabase';\r\n// Removed ProductForm import as this page no longer mounts it directly\r\nimport { ProductCard, Section, Grid, Container, Flex, H1, H2, H3, H4, Body, BodySmall, Caption, Button, Card, Price } from '../components/ui';\r\nimport { getRandomMusicalMessage } from '../utils/musicalLoadingMessages';\r\n\r\nconst Products: React.FC = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [categories, setCategories] = useState<ProductCategory[]>([]);\r\n  const [manufacturers, setManufacturers] = useState<Manufacturer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(searchParams.get('category') || '');\r\n  const [selectedManufacturer, setSelectedManufacturer] = useState<string>(searchParams.get('manufacturer') || '');\r\n  const [sortBy, setSortBy] = useState<string>(searchParams.get('sort') || 'price-low');\r\n  // Removed isProductFormOpen state since this page no longer opens the form\r\n  const [showAllManufacturers, setShowAllManufacturers] = useState(false);\r\n  const [showAllCategories, setShowAllCategories] = useState(false);\r\n  const [maxVisibleItems, setMaxVisibleItems] = useState(6);\r\n  const { user } = useAuth();\r\n\r\n  // Calculate dynamic truncation based on viewport height\r\n  useEffect(() => {\r\n    const calculateMaxItems = () => {\r\n      const viewportHeight = window.innerHeight;\r\n      const headerHeight = 80; // Approximate header height\r\n      const filterHeaderHeight = 120; // \"Filters\" title + spacing\r\n      const sortingHeight = 200; // Sorting controls + spacing\r\n      const buttonHeight = 40; // \"Show More\" button height\r\n      const padding = 100; // Extra padding for breathing room\r\n      \r\n      // Available height for filter lists\r\n      const availableHeight = viewportHeight - headerHeight - filterHeaderHeight - sortingHeight - buttonHeight - padding;\r\n      \r\n      // Each filter item is approximately 40px (32px + 8px spacing)\r\n      const itemHeight = 40;\r\n      const maxItems = Math.max(4, Math.floor(availableHeight / (itemHeight * 2))); // Divide by 2 since we have 2 filter sections\r\n      \r\n      setMaxVisibleItems(Math.min(maxItems, 12)); // Cap at 12 for very large screens\r\n    };\r\n\r\n    calculateMaxItems();\r\n    window.addEventListener('resize', calculateMaxItems);\r\n    \r\n    return () => window.removeEventListener('resize', calculateMaxItems);\r\n  }, []);\r\n\r\n  // Load data\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const [productsData, categoriesData, manufacturersData] = await Promise.all([\r\n          getProductsWithCategories(),\r\n          getProductCategories(),\r\n          getManufacturers(),\r\n        ]);\r\n\r\n        setProducts(productsData);\r\n        setCategories(categoriesData);\r\n        setManufacturers(manufacturersData);\r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Watch for URL parameter changes\r\n  useEffect(() => {\r\n    const categoryFromUrl = searchParams.get('category') || '';\r\n    const manufacturerFromUrl = searchParams.get('manufacturer') || '';\r\n    const sortFromUrl = searchParams.get('sort') || 'price-low';\r\n\r\n    setSelectedCategory(categoryFromUrl);\r\n    setSelectedManufacturer(manufacturerFromUrl);\r\n    setSortBy(sortFromUrl);\r\n  }, [searchParams]);\r\n\r\n  // Handle filter changes\r\n  const handleFilterChange = (type: 'category' | 'manufacturer' | 'sort', value: string) => {\r\n    const newSearchParams = new URLSearchParams(searchParams);\r\n    \r\n    if (type === 'category') {\r\n      if (value) {\r\n        newSearchParams.set('category', value);\r\n      } else {\r\n        newSearchParams.delete('category');\r\n      }\r\n      setSelectedCategory(value);\r\n    } else if (type === 'manufacturer') {\r\n      if (value) {\r\n        newSearchParams.set('manufacturer', value);\r\n      } else {\r\n        newSearchParams.delete('manufacturer');\r\n      }\r\n      setSelectedManufacturer(value);\r\n    } else if (type === 'sort') {\r\n      newSearchParams.set('sort', value);\r\n      setSortBy(value);\r\n    }\r\n    \r\n    setSearchParams(newSearchParams);\r\n    \r\n    // Reset scroll position to top of products grid when filters change\r\n    if (type === 'manufacturer' || type === 'category' || type === 'sort') {\r\n      setTimeout(() => {\r\n        const productsGrid = document.querySelector('.products-grid');\r\n        if (productsGrid) {\r\n          const navHeight = 80; // Approximate navigation height\r\n          const elementTop = productsGrid.getBoundingClientRect().top + window.pageYOffset;\r\n          const offsetPosition = elementTop - navHeight - 20; // Extra 20px for breathing room\r\n          \r\n          window.scrollTo({\r\n            top: offsetPosition,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n      }, 100); // Small delay to ensure state updates have processed\r\n    }\r\n  };\r\n\r\n  const handleProductFormSuccess = async () => {\r\n    // No-op for now; retained for potential future use\r\n    try {\r\n      const [productsData, categoriesData, manufacturersData] = await Promise.all([\r\n        getProductsWithCategories(),\r\n        getProductCategories(),\r\n        getManufacturers(),\r\n      ]);\r\n\r\n      setProducts(productsData);\r\n      setCategories(categoriesData);\r\n      setManufacturers(manufacturersData);\r\n    } catch (error) {\r\n      console.error('Error reloading data:', error);\r\n    }\r\n  };\r\n\r\n  // Filter and sort products\r\n  let filteredProducts = products;\r\n\r\n  if (selectedCategory) {\r\n    filteredProducts = filteredProducts.filter(product => \r\n      product.categories?.id === selectedCategory\r\n    );\r\n  }\r\n\r\n  if (selectedManufacturer) {\r\n    filteredProducts = filteredProducts.filter(product => \r\n      (typeof product.manufacturer === 'object' && product.manufacturer?.id === selectedManufacturer)\r\n    );\r\n  }\r\n\r\n  // Sorting\r\n  const sortedProducts = [...filteredProducts].sort((a, b) => {\r\n    const priceA = a.price || 0;\r\n    const priceB = b.price || 0;\r\n\r\n    if (sortBy === 'price-high') return priceB - priceA;\r\n    return priceA - priceB; // default low to high\r\n  });\r\n\r\n  // Show loading spinner if data is still loading\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-warm-white\">\r\n        <div className=\"pt-28\">\r\n          <div className=\"flex items-center justify-center min-h-[50vh]\">\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-stone-600 mx-auto\"></div>\r\n              <p className=\"mt-4 text-stone-600\">{getRandomMusicalMessage()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Filters */}\r\n      <Section variant=\"hero\" background=\"custom\" customBackground=\"bg-warm-beige\" className=\"-mt-4\">\r\n        <Container size=\"6xl\">\r\n          <div className=\"max-w-4xl\">\r\n            <h1 className=\"text-4xl lg:text-5xl xl:text-6xl font-light text-stone-900 leading-tight tracking-wide mb-6\">\r\n              {selectedCategory\r\n                ? categories.find(c => c.id === selectedCategory)?.name || 'Products'\r\n                : 'Products'\r\n              }\r\n            </h1>\r\n             \r\n            {selectedCategory ? (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"prose prose-stone prose-lg max-w-none text-stone-700 leading-relaxed\">\r\n                  {categories.find(c => c.id === selectedCategory)?.category_description || `Browse our ${categories.find(c => c.id === selectedCategory)?.name?.toLowerCase()} collection`}\r\n                </div>\r\n                \r\n                <Link\r\n                  to=\"/products/list\"\r\n                  className=\"inline-flex items-center px-6 py-3 border-2 border-stone-900 text-stone-900 font-medium tracking-wide hover:bg-stone-900 hover:text-white transition-all duration-300\"\r\n                >\r\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                  </svg>\r\n                  View All Products\r\n                </Link>\r\n                \r\n                {user && (\r\n                  <div className=\"mt-4\">\r\n                    <Button\r\n                      onClick={() => navigate('/products/new')}\r\n                      variant=\"primary\"\r\n                      size=\"sm\"\r\n                    >\r\n                      Add Product\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"prose prose-stone prose-lg max-w-none text-stone-700 leading-relaxed\">\r\n                  Discover our collection of high-quality audio equipment\r\n                </div>\r\n                \r\n                {user && (\r\n                  <Button\r\n                    onClick={() => navigate('/products/new')}\r\n                    variant=\"primary\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Add Product\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </Section>\r\n\r\n      {/* Main Content with Sidebar */}\r\n      <Section variant=\"default\" background=\"custom\" customBackground=\"bg-warm-white\">\r\n        <Container size=\"6xl\">\r\n          <div className=\"flex flex-col lg:flex-row gap-8\">\r\n                         {/* Sidebar Filters */}\r\n             <div className=\"lg:w-80 lg:flex-shrink-0 pt-16\">\r\n               <div className=\"lg:sticky lg:top-32\">\r\n\r\n                 <div className=\"space-y-8\">\r\n                                     {!selectedCategory && (\r\n                    <div>\r\n                      <label className=\"block text-base font-semibold text-stone-900 mb-4\">\r\n                        Filter by Category\r\n                      </label>\r\n                      <div className=\"space-y-2\">\r\n                        <label className=\"flex items-center space-x-3 cursor-pointer group\">\r\n                          <div className=\"relative\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"category\"\r\n                              value=\"\"\r\n                              checked={selectedCategory === ''}\r\n                              onChange={(e) => handleFilterChange('category', e.target.value)}\r\n                              className=\"sr-only\"\r\n                            />\r\n                            <div className={`w-4 h-4 rounded-full border-2 transition-all duration-200 ${\r\n                              selectedCategory === '' \r\n                                ? 'border-primary-600 bg-primary-600' \r\n                                : 'border-stone-300 group-hover:border-stone-400'\r\n                            }`}>\r\n                              {selectedCategory === '' && (\r\n                                <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <span className=\"text-stone-700 group-hover:text-stone-900 transition-colors\">All Categories</span>\r\n                        </label>\r\n                        \r\n                        {(() => {\r\n                          // Show dynamic number of categories based on viewport height, or all if expanded\r\n                          const displayedCategories = showAllCategories \r\n                            ? categories \r\n                            : categories.slice(0, maxVisibleItems);\r\n\r\n                          return (\r\n                            <>\r\n                              <div className={showAllCategories ? \"max-h-64 overflow-y-auto pr-2 space-y-2\" : \"space-y-2\"}>\r\n                                {displayedCategories.map(category => (\r\n                                  <label key={category.id} className=\"flex items-center space-x-3 cursor-pointer group\">\r\n                                    <div className=\"relative\">\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        name=\"category\"\r\n                                        value={category.id}\r\n                                        checked={selectedCategory === category.id}\r\n                                        onChange={(e) => handleFilterChange('category', e.target.value)}\r\n                                        className=\"sr-only\"\r\n                                      />\r\n                                      <div className={`w-4 h-4 rounded-full border-2 transition-all duration-200 ${\r\n                                        selectedCategory === category.id \r\n                                          ? 'border-primary-600 bg-primary-600' \r\n                                          : 'border-stone-300 group-hover:border-stone-400'\r\n                                      }`}>\r\n                                        {selectedCategory === category.id && (\r\n                                          <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                    <span className=\"text-stone-700 group-hover:text-stone-900 transition-colors\">{category.name}</span>\r\n                                  </label>\r\n                                ))}\r\n                              </div>\r\n                              \r\n                              {categories.length > maxVisibleItems && (\r\n                                <button\r\n                                  onClick={() => setShowAllCategories(!showAllCategories)}\r\n                                  className=\"text-sm text-stone-700 hover:text-stone-900 font-medium transition-colors mt-2 underline decoration-stone-300 hover:decoration-stone-600\"\r\n                                >\r\n                                  {showAllCategories \r\n                                    ? `Show Less (${categories.length - maxVisibleItems} fewer)` \r\n                                    : `Show More (${categories.length - maxVisibleItems} more)`\r\n                                  }\r\n                                </button>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                                       <div>\r\n                      <label className=\"block text-base font-semibold text-stone-900 mb-4\">\r\n                        Filter by Manufacturer\r\n                      </label>\r\n                                             <div className=\"space-y-2\">\r\n                         <label className=\"flex items-center space-x-3 cursor-pointer group\">\r\n                           <div className=\"relative\">\r\n                             <input\r\n                               type=\"radio\"\r\n                               name=\"manufacturer\"\r\n                               value=\"\"\r\n                               checked={selectedManufacturer === ''}\r\n                               onChange={(e) => handleFilterChange('manufacturer', e.target.value)}\r\n                               className=\"sr-only\"\r\n                             />\r\n                             <div className={`w-4 h-4 rounded-full border-2 transition-all duration-200 ${\r\n                               selectedManufacturer === '' \r\n                                 ? 'border-primary-600 bg-primary-600' \r\n                                 : 'border-stone-300 group-hover:border-stone-400'\r\n                             }`}>\r\n                               {selectedManufacturer === '' && (\r\n                                 <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                               )}\r\n                             </div>\r\n                           </div>\r\n                           <span className=\"text-stone-700 group-hover:text-stone-900 transition-colors\">All Manufacturers</span>\r\n                         </label>\r\n                         \r\n                         {(() => {\r\n                           // Filter manufacturers to only show those with products in the current category\r\n                           const relevantManufacturers = selectedCategory\r\n                             ? manufacturers.filter(manufacturer =>\r\n                                 products.some(product =>\r\n                                   product.manufacturer?.id === manufacturer.id &&\r\n                                   product.categories?.id === selectedCategory\r\n                                 )\r\n                               )\r\n                             : manufacturers;\r\n\r\n                           // Show dynamic number of manufacturers based on viewport height, or all if expanded\r\n                           const displayedManufacturers = showAllManufacturers \r\n                             ? relevantManufacturers \r\n                             : relevantManufacturers.slice(0, maxVisibleItems);\r\n\r\n                           return (\r\n                             <>\r\n                               <div className={showAllManufacturers ? \"max-h-64 overflow-y-auto pr-2 space-y-2\" : \"space-y-2\"}>\r\n                                 {displayedManufacturers.map(manufacturer => (\r\n                                   <label key={manufacturer.id} className=\"flex items-center space-x-3 cursor-pointer group\">\r\n                                     <div className=\"relative\">\r\n                                       <input\r\n                                         type=\"radio\"\r\n                                         name=\"manufacturer\"\r\n                                         value={manufacturer.id}\r\n                                         checked={selectedManufacturer === manufacturer.id}\r\n                                         onChange={(e) => handleFilterChange('manufacturer', e.target.value)}\r\n                                         className=\"sr-only\"\r\n                                       />\r\n                                       <div className={`w-4 h-4 rounded-full border-2 transition-all duration-200 ${\r\n                                         selectedManufacturer === manufacturer.id \r\n                                           ? 'border-primary-600 bg-primary-600' \r\n                                           : 'border-stone-300 group-hover:border-stone-400'\r\n                                       }`}>\r\n                                         {selectedManufacturer === manufacturer.id && (\r\n                                           <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                                         )}\r\n                                       </div>\r\n                                     </div>\r\n                                     <span className=\"text-stone-700 group-hover:text-stone-900 transition-colors\">{manufacturer.name}</span>\r\n                                   </label>\r\n                                 ))}\r\n                               </div>\r\n                               \r\n                               {relevantManufacturers.length > maxVisibleItems && (\r\n                                 <button\r\n                                   onClick={() => setShowAllManufacturers(!showAllManufacturers)}\r\n                                   className=\"text-sm text-stone-700 hover:text-stone-900 font-medium transition-colors mt-2 underline decoration-stone-300 hover:decoration-stone-600\"\r\n                                 >\r\n                                   {showAllManufacturers \r\n                                     ? `Show Less (${relevantManufacturers.length - maxVisibleItems} fewer)` \r\n                                     : `Show More (${relevantManufacturers.length - maxVisibleItems} more)`\r\n                                   }\r\n                                 </button>\r\n                               )}\r\n                             </>\r\n                           );\r\n                         })()}\r\n                       </div>\r\n                    </div>\r\n\r\n                   <div>\r\n                     <label className=\"block text-base font-semibold text-stone-900 mb-4\">\r\n                       Sort by Price\r\n                     </label>\r\n                     <div className=\"space-y-2\">\r\n                       <label className=\"flex items-center space-x-3 cursor-pointer group\">\r\n                         <div className=\"relative\">\r\n                           <input\r\n                             type=\"radio\"\r\n                             name=\"sort\"\r\n                             value=\"price-low\"\r\n                             checked={sortBy === 'price-low'}\r\n                             onChange={(e) => handleFilterChange('sort', e.target.value)}\r\n                             className=\"sr-only\"\r\n                           />\r\n                           <div className={`w-4 h-4 rounded-full border-2 transition-all duration-200 ${\r\n                             sortBy === 'price-low' \r\n                               ? 'border-primary-600 bg-primary-600' \r\n                               : 'border-stone-300 group-hover:border-stone-400'\r\n                           }`}>\r\n                             {sortBy === 'price-low' && (\r\n                               <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                             )}\r\n                           </div>\r\n                         </div>\r\n                         <span className=\"text-stone-700 group-hover:text-stone-900 transition-colors\">Low to High</span>\r\n                       </label>\r\n                       \r\n                       <label className=\"flex items-center space-x-3 cursor-pointer group\">\r\n                         <div className=\"relative\">\r\n                           <input\r\n                             type=\"radio\"\r\n                             name=\"sort\"\r\n                             value=\"price-high\"\r\n                             checked={sortBy === 'price-high'}\r\n                             onChange={(e) => handleFilterChange('sort', e.target.value)}\r\n                             className=\"sr-only\"\r\n                           />\r\n                           <div className={`w-4 h-4 rounded-full border-2 transition-all duration-200 ${\r\n                             sortBy === 'price-high' \r\n                               ? 'border-primary-600 bg-primary-600' \r\n                               : 'border-stone-300 group-hover:border-stone-400'\r\n                           }`}>\r\n                             {sortBy === 'price-high' && (\r\n                               <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                             )}\r\n                           </div>\r\n                         </div>\r\n                         <span className=\"text-stone-700 group-hover:text-stone-900 transition-colors\">High to Low</span>\r\n                       </label>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n\r\n                         {/* Products Grid Section */}\r\n             <div className=\"flex-1 pt-8 pb-16 products-grid\">\r\n              {sortedProducts.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <svg className=\"mx-auto h-12 w-12 text-stone-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\r\n                  </svg>\r\n                  <H3 className=\"mt-2\">No products found</H3>\r\n                  <Body className=\"mt-1 text-stone-500\">\r\n                    {selectedCategory || selectedManufacturer\r\n                      ? 'Try adjusting your filters to see more products.'\r\n                      : 'No products are available at the moment.'\r\n                    }\r\n                  </Body>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-10\">\r\n                  {sortedProducts.map((product) => (\r\n                    <Link key={product.id} to={`/products/${product.slug}`} className=\"block h-full\">\r\n                      <ProductCard\r\n                        product={product}\r\n                        showBadges={true}\r\n                        showPrice={true}\r\n                        showCategory={!selectedCategory}\r\n                        className=\"h-full\"\r\n                      />\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Products };\r\n"],"names":["Products","searchParams","setSearchParams","useSearchParams","navigate","useNavigate","useLocation","products","setProducts","useState","categories","setCategories","manufacturers","setManufacturers","loading","setLoading","selectedCategory","setSelectedCategory","selectedManufacturer","setSelectedManufacturer","sortBy","setSortBy","showAllManufacturers","setShowAllManufacturers","showAllCategories","setShowAllCategories","maxVisibleItems","setMaxVisibleItems","user","useAuth","useEffect","calculateMaxItems","availableHeight","maxItems","productsData","categoriesData","manufacturersData","getProductsWithCategories","getProductCategories","getManufacturers","error","categoryFromUrl","manufacturerFromUrl","sortFromUrl","handleFilterChange","type","value","newSearchParams","productsGrid","offsetPosition","filteredProducts","product","sortedProducts","a","b","priceA","priceB","jsx","jsxs","Section","Container","c","Link","Button","e","displayedCategories","Fragment","category","relevantManufacturers","manufacturer","displayedManufacturers","H3","Body","ProductCard"],"mappings":"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"}